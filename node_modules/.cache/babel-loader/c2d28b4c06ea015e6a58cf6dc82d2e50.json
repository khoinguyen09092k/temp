{"ast":null,"code":"import Axios from \"axios\";\nimport { DOMAIN, TOKEN, TokenCyberSoft, TOKEN_CYBERSOFT } from \"./../utilities/Settings/config\";\nexport class baseService {\n  constructor() {\n    this.post = (url, model) => {\n      return Axios({\n        url: `${DOMAIN}${url}`,\n        method: 'POST',\n        data: model,\n        headers: {\n          TokenCyberSoft,\n          'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)\n        }\n      });\n    };\n\n    this.put = (url, model) => {\n      return Axios({\n        url: `${DOMAIN}${url}`,\n        method: 'PUT',\n        data: model,\n        headers: {\n          TokenCyberSoft,\n          'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)\n        }\n      });\n    };\n\n    this.get = url => {\n      console.log(url);\n      return this.https.get(url);\n    };\n\n    this.delete = url => {\n      return Axios({\n        url: `${DOMAIN}${url}`,\n        method: 'DELETE',\n        headers: {\n          TokenCyberSoft,\n          'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)\n        }\n      });\n    };\n\n    this.https = Axios.create({\n      baseURL: DOMAIN,\n      timeout: 30000\n    });\n    this.https.interceptors.request.use(config => {\n      config.headers = { ...config.headers,\n        'accept': 'application/json',\n        'TokenCyberSoft': TokenCyberSoft,\n        'Authorization': `${localStorage.getItem(TOKEN) ? 'Bearer ' + localStorage.getItem(TOKEN) : ''}`\n      };\n      return config;\n    }, errors => {\n      return Promise.reject(errors);\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/del/temp/src/services/baseService.js"],"names":["Axios","DOMAIN","TOKEN","TokenCyberSoft","TOKEN_CYBERSOFT","baseService","constructor","post","url","model","method","data","headers","localStorage","getItem","put","get","console","log","https","delete","create","baseURL","timeout","interceptors","request","use","config","errors","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,cAAxB,EAAwCC,eAAxC,QAA+D,gCAA/D;AAGA,OAAO,MAAMC,WAAN,CAAiB;AACtBC,EAAAA,WAAW,GAAE;AAAA,SAkBbC,IAlBa,GAkBP,CAACC,GAAD,EAAMC,KAAN,KAAe;AACnB,aAAOT,KAAK,CAAC;AACXQ,QAAAA,GAAG,EAAG,GAAEP,MAAO,GAAEO,GAAI,EADV;AAELE,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,IAAI,EAAEF,KAHD;AAILG,QAAAA,OAAO,EAAE;AAAET,UAAAA,cAAF;AAAiB,2BAAiB,YAAYU,YAAY,CAACC,OAAb,CAAqBZ,KAArB;AAA9C;AAJJ,OAAD,CAAZ;AAMD,KAzBY;;AAAA,SA2Bba,GA3Ba,GA2BP,CAACP,GAAD,EAAMC,KAAN,KAAe;AACnB,aAAOT,KAAK,CAAC;AACXQ,QAAAA,GAAG,EAAG,GAAEP,MAAO,GAAEO,GAAI,EADV;AAELE,QAAAA,MAAM,EAAE,KAFH;AAGLC,QAAAA,IAAI,EAAEF,KAHD;AAILG,QAAAA,OAAO,EAAE;AAACT,UAAAA,cAAD;AAAiB,2BAAiB,YAAYU,YAAY,CAACC,OAAb,CAAqBZ,KAArB;AAA9C;AAJJ,OAAD,CAAZ;AAMD,KAlCY;;AAAA,SAoCbc,GApCa,GAoCNR,GAAD,IAAS;AACbS,MAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;AACA,aAAO,KAAKW,KAAL,CAAWH,GAAX,CAAeR,GAAf,CAAP;AACD,KAvCY;;AAAA,SAiDbY,MAjDa,GAiDHZ,GAAD,IAAS;AAChB,aAAOR,KAAK,CAAC;AACTQ,QAAAA,GAAG,EAAG,GAAEP,MAAO,GAAEO,GAAI,EADZ;AAETE,QAAAA,MAAM,EAAE,QAFC;AAGTE,QAAAA,OAAO,EAAE;AAAET,UAAAA,cAAF;AACL,2BAAiB,YAAYU,YAAY,CAACC,OAAb,CAAqBZ,KAArB;AADxB;AAHA,OAAD,CAAZ;AAMH,KAxDc;;AACX,SAAKiB,KAAL,GAAanB,KAAK,CAACqB,MAAN,CAAa;AACxBC,MAAAA,OAAO,EAAErB,MADe;AAExBsB,MAAAA,OAAO,EAAE;AAFe,KAAb,CAAb;AAIA,SAAKJ,KAAL,CAAWK,YAAX,CAAwBC,OAAxB,CAAgCC,GAAhC,CAAqCC,MAAD,IAAU;AAC5CA,MAAAA,MAAM,CAACf,OAAP,GAAgB,EACd,GAAGe,MAAM,CAACf,OADI;AAEd,kBAAU,kBAFI;AAGd,0BAAiBT,cAHH;AAId,yBAAkB,GAAEU,YAAY,CAACC,OAAb,CAAqBZ,KAArB,IAA8B,YAAYW,YAAY,CAACC,OAAb,CAAqBZ,KAArB,CAA1C,GAAwE,EAAG;AAJjF,OAAhB;AAMA,aAAOyB,MAAP;AACD,KARD,EAQIC,MAAD,IAAY;AACb,aAAOC,OAAO,CAACC,MAAR,CAAeF,MAAf,CAAP;AACD,KAVD;AAWD;;AAjBqB","sourcesContent":["import Axios from \"axios\";\r\nimport { DOMAIN, TOKEN, TokenCyberSoft, TOKEN_CYBERSOFT } from \"./../utilities/Settings/config\";\r\n\r\n\r\nexport class baseService{\r\n  constructor(){\r\n    this.https = Axios.create({\r\n      baseURL: DOMAIN,\r\n      timeout: 30000,\r\n    })\r\n    this.https.interceptors.request.use((config)=>{\r\n      config.headers ={\r\n        ...config.headers,\r\n        'accept': 'application/json',\r\n        'TokenCyberSoft':TokenCyberSoft,\r\n        'Authorization': `${localStorage.getItem(TOKEN) ? 'Bearer ' + localStorage.getItem(TOKEN) : ''}`\r\n      }\r\n      return config\r\n    }, (errors) => {\r\n      return Promise.reject(errors)\r\n    })\r\n  }\r\n\r\n  post =(url, model) =>{\r\n    return Axios({\r\n      url: `${DOMAIN}${url}`,\r\n            method: 'POST',\r\n            data: model,\r\n            headers: { TokenCyberSoft,'Authorization': 'Bearer ' + localStorage.getItem(TOKEN) }\r\n    })\r\n  }\r\n\r\n  put = (url, model) =>{\r\n    return Axios({\r\n      url: `${DOMAIN}${url}`,\r\n            method: 'PUT',\r\n            data: model,\r\n            headers: {TokenCyberSoft, 'Authorization': 'Bearer ' + localStorage.getItem(TOKEN) }\r\n    })\r\n  }\r\n\r\n  get = (url) => {\r\n    console.log(url)\r\n    return this.https.get(url);\r\n  }\r\n\r\n  // get = (url) => {\r\n  //   return Axios({\r\n  //     url: `${DOMAIN}/${url}`,\r\n  //     method: \"GET\",\r\n  //     headers: { 'Authorization': \"Bearer \" + localStorage.getItem(TOKEN) }, //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\r\n  //   });\r\n  // };\r\n\r\n  delete = (url) => {\r\n    return Axios({\r\n        url: `${DOMAIN}${url}`,\r\n        method: 'DELETE',\r\n        headers: { TokenCyberSoft,\r\n            'Authorization': 'Bearer ' + localStorage.getItem(TOKEN) }\r\n    })\r\n}\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}